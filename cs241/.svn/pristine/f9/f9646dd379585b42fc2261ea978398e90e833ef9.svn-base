[
  {
    "timestamp": "2016-02-03 22:52:30.569760", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==4672== Memcheck, a memory error detector\n==4672== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==4672== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==4672== Command: ./mp/vector/svn/johri3/vector/vector_test 18\n==4672== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==4672== \n==4672== HEAP SUMMARY:\n==4672==     in use at exit: 0 bytes in 0 blocks\n==4672==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==4672== \n==4672== All heap blocks were freed -- no leaks are possible\n==4672== \n==4672== For counts of detected and suppressed errors, rerun with: -v\n==4672== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==4714== Memcheck, a memory error detector\n==4714== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==4714== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==4714== Command: ././document_test 3\n==4714== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==4714== \n==4714== HEAP SUMMARY:\n==4714==     in use at exit: 8 bytes in 1 blocks\n==4714==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==4714== \n==4714== LEAK SUMMARY:\n==4714==    definitely lost: 0 bytes in 0 blocks\n==4714==    indirectly lost: 0 bytes in 0 blocks\n==4714==      possibly lost: 0 bytes in 0 blocks\n==4714==    still reachable: 8 bytes in 1 blocks\n==4714==         suppressed: 0 bytes in 0 blocks\n==4714== Reachable blocks (those to which a pointer was found) are not shown.\n==4714== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==4714== \n==4714== For counts of detected and suppressed errors, rerun with: -v\n==4714== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-04 14:44:17.791635", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==17405== Memcheck, a memory error detector\n==17405== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==17405== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==17405== Command: ./mp/vector/svn/johri3/vector/vector_test 18\n==17405== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==17405== \n==17405== HEAP SUMMARY:\n==17405==     in use at exit: 0 bytes in 0 blocks\n==17405==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==17405== \n==17405== All heap blocks were freed -- no leaks are possible\n==17405== \n==17405== For counts of detected and suppressed errors, rerun with: -v\n==17405== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==17447== Memcheck, a memory error detector\n==17447== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==17447== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==17447== Command: ././document_test 3\n==17447== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==17447== \n==17447== HEAP SUMMARY:\n==17447==     in use at exit: 8 bytes in 1 blocks\n==17447==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==17447== \n==17447== LEAK SUMMARY:\n==17447==    definitely lost: 0 bytes in 0 blocks\n==17447==    indirectly lost: 0 bytes in 0 blocks\n==17447==      possibly lost: 0 bytes in 0 blocks\n==17447==    still reachable: 8 bytes in 1 blocks\n==17447==         suppressed: 0 bytes in 0 blocks\n==17447== Reachable blocks (those to which a pointer was found) are not shown.\n==17447== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==17447== \n==17447== For counts of detected and suppressed errors, rerun with: -v\n==17447== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-05 02:08:00.215924", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==23621== Memcheck, a memory error detector\n==23621== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==23621== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==23621== Command: ./mp/vector/svn/johri3/vector/vector_test 18\n==23621== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==23621== \n==23621== HEAP SUMMARY:\n==23621==     in use at exit: 0 bytes in 0 blocks\n==23621==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==23621== \n==23621== All heap blocks were freed -- no leaks are possible\n==23621== \n==23621== For counts of detected and suppressed errors, rerun with: -v\n==23621== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==23663== Memcheck, a memory error detector\n==23663== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==23663== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==23663== Command: ././document_test 3\n==23663== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==23663== \n==23663== HEAP SUMMARY:\n==23663==     in use at exit: 8 bytes in 1 blocks\n==23663==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==23663== \n==23663== LEAK SUMMARY:\n==23663==    definitely lost: 0 bytes in 0 blocks\n==23663==    indirectly lost: 0 bytes in 0 blocks\n==23663==      possibly lost: 0 bytes in 0 blocks\n==23663==    still reachable: 8 bytes in 1 blocks\n==23663==         suppressed: 0 bytes in 0 blocks\n==23663== Reachable blocks (those to which a pointer was found) are not shown.\n==23663== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==23663== \n==23663== For counts of detected and suppressed errors, rerun with: -v\n==23663== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-06 00:06:26.021265", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==8495== Memcheck, a memory error detector\n==8495== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==8495== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==8495== Command: ./mp/vector/svn/johri3/vector/vector_test 18\n==8495== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==8495== \n==8495== HEAP SUMMARY:\n==8495==     in use at exit: 0 bytes in 0 blocks\n==8495==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==8495== \n==8495== All heap blocks were freed -- no leaks are possible\n==8495== \n==8495== For counts of detected and suppressed errors, rerun with: -v\n==8495== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==8538== Memcheck, a memory error detector\n==8538== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==8538== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==8538== Command: ././document_test 3\n==8538== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==8538== \n==8538== HEAP SUMMARY:\n==8538==     in use at exit: 8 bytes in 1 blocks\n==8538==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==8538== \n==8538== LEAK SUMMARY:\n==8538==    definitely lost: 0 bytes in 0 blocks\n==8538==    indirectly lost: 0 bytes in 0 blocks\n==8538==      possibly lost: 0 bytes in 0 blocks\n==8538==    still reachable: 8 bytes in 1 blocks\n==8538==         suppressed: 0 bytes in 0 blocks\n==8538== Reachable blocks (those to which a pointer was found) are not shown.\n==8538== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==8538== \n==8538== For counts of detected and suppressed errors, rerun with: -v\n==8538== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-07 14:49:51.667097", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==13904== Memcheck, a memory error detector\n==13904== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==13904== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==13904== Command: ./mp/vector/svn/johri3/vector/vector_test 18\n==13904== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==13904== \n==13904== HEAP SUMMARY:\n==13904==     in use at exit: 0 bytes in 0 blocks\n==13904==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==13904== \n==13904== All heap blocks were freed -- no leaks are possible\n==13904== \n==13904== For counts of detected and suppressed errors, rerun with: -v\n==13904== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==13946== Memcheck, a memory error detector\n==13946== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==13946== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==13946== Command: ././document_test 3\n==13946== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==13946== \n==13946== HEAP SUMMARY:\n==13946==     in use at exit: 8 bytes in 1 blocks\n==13946==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==13946== \n==13946== LEAK SUMMARY:\n==13946==    definitely lost: 0 bytes in 0 blocks\n==13946==    indirectly lost: 0 bytes in 0 blocks\n==13946==      possibly lost: 0 bytes in 0 blocks\n==13946==    still reachable: 8 bytes in 1 blocks\n==13946==         suppressed: 0 bytes in 0 blocks\n==13946== Reachable blocks (those to which a pointer was found) are not shown.\n==13946== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==13946== \n==13946== For counts of detected and suppressed errors, rerun with: -v\n==13946== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-08 02:47:42.622684", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-08 02:54:03.911006", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==7880== Memcheck, a memory error detector\n==7880== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==7880== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==7880== Command: ./mp/vector/svn/johri3/vector/vector_test 18\n==7880== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==7880== \n==7880== HEAP SUMMARY:\n==7880==     in use at exit: 0 bytes in 0 blocks\n==7880==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==7880== \n==7880== All heap blocks were freed -- no leaks are possible\n==7880== \n==7880== For counts of detected and suppressed errors, rerun with: -v\n==7880== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==7922== Memcheck, a memory error detector\n==7922== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==7922== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==7922== Command: ././document_test 3\n==7922== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==7922== \n==7922== HEAP SUMMARY:\n==7922==     in use at exit: 8 bytes in 1 blocks\n==7922==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==7922== \n==7922== LEAK SUMMARY:\n==7922==    definitely lost: 0 bytes in 0 blocks\n==7922==    indirectly lost: 0 bytes in 0 blocks\n==7922==      possibly lost: 0 bytes in 0 blocks\n==7922==    still reachable: 8 bytes in 1 blocks\n==7922==         suppressed: 0 bytes in 0 blocks\n==7922== Reachable blocks (those to which a pointer was found) are not shown.\n==7922== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==7922== \n==7922== For counts of detected and suppressed errors, rerun with: -v\n==7922== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-09 09:03:21.120548", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==27261== Memcheck, a memory error detector\n==27261== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==27261== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==27261== Command: ./mp/vector/svn/johri3/vector/vector_test 18\n==27261== \n==27261== Invalid read of size 1\n==27261==    at 0x4C2DD64: __strcmp_sse42 (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x401A97: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\n==27261== \n==27261== \n==27261== Process terminating with default action of signal 11 (SIGSEGV)\n==27261==  Access not within mapped region at address 0x0\n==27261==    at 0x4C2DD64: __strcmp_sse42 (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x401A97: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==  If you believe this happened as a result of a stack\n==27261==  overflow in your program's main thread (unlikely but\n==27261==  possible), you can try to increase the size of the\n==27261==  main thread stack using the --main-stacksize= flag.\n==27261==  The main thread stack size used in this run was 8388608.\n==27261== \n==27261== HEAP SUMMARY:\n==27261==     in use at exit: 304 bytes in 12 blocks\n==27261==   total heap usage: 13 allocs, 1 frees, 384 bytes allocated\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 1 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x4019DB: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 2 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x4019ED: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 3 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x4019FF: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 4 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x401A11: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 5 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x401A23: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 6 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x401A35: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 7 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x401A47: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 8 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x401A59: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 9 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x401A6B: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 12 bytes in 1 blocks are definitely lost in loss record 10 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27261==    by 0x401A7D: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== 184 (24 direct, 160 indirect) bytes in 1 blocks are definitely lost in loss record 12 of 12\n==27261==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27261==    by 0x4009FA: Vector_create (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x4019BC: check_memory (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261==    by 0x402A01: main (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/vector_test)\n==27261== \n==27261== LEAK SUMMARY:\n==27261==    definitely lost: 144 bytes in 11 blocks\n==27261==    indirectly lost: 160 bytes in 1 blocks\n==27261==      possibly lost: 0 bytes in 0 blocks\n==27261==    still reachable: 0 bytes in 0 blocks\n==27261==         suppressed: 0 bytes in 0 blocks\n==27261== \n==27261== For counts of detected and suppressed errors, rerun with: -v\n==27261== ERROR SUMMARY: 12 errors from 12 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==27303== Memcheck, a memory error detector\n==27303== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==27303== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==27303== Command: ././document_test 3\n==27303== \n==27303== Invalid write of size 8\n==27303==    at 0x401014: Vector_insert (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x4012E1: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==27303==  Address 0x53fa0e8 is 8 bytes before a block of size 80 alloc'd\n==27303==    at 0x4C2B974: calloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27303==    by 0x400C3C: Vector_create (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x400914: Document_create (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x4012CF: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==27303== \n==27303== Invalid read of size 8\n==27303==    at 0x401010: Vector_insert (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x4012E1: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==27303==  Address 0x53fa0e8 is 8 bytes before a block of size 80 alloc'd\n==27303==    at 0x4C2B974: calloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27303==    by 0x400C3C: Vector_create (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x400914: Document_create (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x4012CF: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==27303== \n==27303== Invalid read of size 8\n==27303==    at 0x401023: Vector_insert (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x4012E1: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==27303==  Address 0x53fa0e0 is 16 bytes before a block of size 80 alloc'd\n==27303==    at 0x4C2B974: calloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27303==    by 0x400C3C: Vector_create (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x400914: Document_create (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x4012CF: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==27303== \n==27303== \n==27303== Process terminating with default action of signal 11 (SIGSEGV)\n==27303==  Access not within mapped region at address 0xFFFFFFFFFFFFFF10\n==27303==    at 0x401023: Vector_insert (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x4012E1: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==27303==  If you believe this happened as a result of a stack\n==27303==  overflow in your program's main thread (unlikely but\n==27303==  possible), you can try to increase the size of the\n==27303==  main thread stack using the --main-stacksize= flag.\n==27303==  The main thread stack size used in this run was 8388608.\n==27303== \n==27303== HEAP SUMMARY:\n==27303==     in use at exit: 171 bytes in 4 blocks\n==27303==   total heap usage: 4 allocs, 0 frees, 171 bytes allocated\n==27303== \n==27303== 59 bytes in 1 blocks are definitely lost in loss record 3 of 4\n==27303==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27303==    by 0x50BF529: strdup (in /usr/lib64/libc-2.17.so)\n==27303==    by 0x400FC7: Vector_insert (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x4012E1: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==27303== \n==27303== 80 bytes in 1 blocks are definitely lost in loss record 4 of 4\n==27303==    at 0x4C2B974: calloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==27303==    by 0x400C3C: Vector_create (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x400914: Document_create (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x4012CF: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/johri3/vector/document_test)\n==27303==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==27303== \n==27303== LEAK SUMMARY:\n==27303==    definitely lost: 139 bytes in 2 blocks\n==27303==    indirectly lost: 0 bytes in 0 blocks\n==27303==      possibly lost: 0 bytes in 0 blocks\n==27303==    still reachable: 32 bytes in 2 blocks\n==27303==         suppressed: 0 bytes in 0 blocks\n==27303== Reachable blocks (those to which a pointer was found) are not shown.\n==27303== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==27303== \n==27303== For counts of detected and suppressed errors, rerun with: -v\n==27303== ERROR SUMMARY: 39 errors from 5 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }
]