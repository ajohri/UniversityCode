/**
 * MapReduce
 * CS 241 - Spring 2016
 */

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include "common.h"

void usage() {
  fprintf(stderr, "shuffler destination1 destination2 ...\n");
  fprintf(stderr, "where destination1..n are files on the filesystem to which "
                  "the shuffler will write its output\n");
}

int main(int argc, char *argv[]) {
  // read from stdin
  // hash the key for the input line
  // send them to the correct output file (output files are given as command
  // line arguments
  if (argc < 2) {
    usage();
    exit(1);
  }

  char    *line = NULL;
  size_t  size = 0;
  char    *key = NULL;
  char    *value = NULL;
  unsigned int  hash;
  int   i, index, num_files;
  FILE    **fp;


  num_files = argc;
  printf("Shuffler: Main: Number of Files: %d\n", num_files);
  printf("Shuffler: Main: argv[0]: %s\n", argv[0]);
  fp = (FILE **)calloc(num_files, sizeof(FILE *));

  for (i=0; i< num_files; i++) {
    fp[i] = fopen(argv[i+1], "w+");
    printf("Shuffler: Main: Destination Files: %s\n", argv[i+1]);
  }

  while (getline(&line, &size, stdin) != -1) {
    printf("Shuffler: Main: Inside the while loop\n");
    if (!split_key_value(line, &key, &value)) {
      fprintf(stderr, "reducer input is malformed: %s\n", line);
      continue;
    } else {

      // Calculate hash the key
      hash = hashKey(key);

      // Get the index corresponding to the hash
      index = hash%num_files;

      // Index used to get to the right file pointer
      fputs(line, fp[index]);                           // We had a plus one here. 
      printf("Shuffler: Main: Line: %s File Pointer: %p\n", line, fp[index]);
      fputc('\n', fp[index]);
    }
  }
  printf("Shuffler: Main: Outside the while loop\n");

  for (i=0; i< num_files; i++) {
    fclose(fp[i]);
  }

  return 0;
}